from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State

import app.keyboards as kb
import app.database.requests as rq
from app.database.models import async_session
from app.database.models import fetch_value

user_data = {
    'UserID': 0,
    'money': 0
}

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    user_data['UserID'] = message.from_user.id
    await rq.set_user(user_data['UserID'])
    keyb = [
        [kb.KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],[kb.KeyboardButton(text="üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫")],
        [kb.KeyboardButton(text="üíº –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")]
    ]
    keyboard = kb.ReplyKeyboardMarkup(keyboard=keyb)
    text = f'üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å\n\n‚ùì –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏, –Ω–∞–∂–º–∏—Ç–µ: "‚ùì –ü–æ–º–æ—â—å"'
    user_data['UserID'] = await fetch_value('moneyy')
    await message.answer(text, reply_markup=keyboard)

@router.callback_query() 
async def process_callback(callback_query: CallbackQuery): 
    data = callback_query.data

    if data == 'click':
        user_data['money'] += 1
        await callback_query.bot.edit_message_text(
            text=f"üí∞ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞:\n–ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∏–∫–µ—Ä –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üíé –ö–ª–∏–∫–µ—Ä'\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_data['money']} üí∞",
            chat_id=callback_query.message.chat.id,
            message_id=callback_query.message.message_id,
            parse_mode=None,
            reply_markup=kb.zarabotok
        )
        await rq.update_user(user_data['UserID'], user_data['money'])

@router.message(F.text.lower() == '‚ùì –ø–æ–º–æ—â—å')
async def help_button(message: Message):
    await message.reply("‚ùì –ó–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞—é—Ç –∫–Ω–æ–ø–∫–∏?:\n\n1. –ö–Ω–æ–ø–∫–∞ 'üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫' –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –º–æ–Ω–µ—Ç\n\nüí∏ –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥?:\n\n–°–ø–æ—Å–æ–±–æ–≤ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥ - –Ω–µ—Å–∫–æ–ª—å–∫–æ:\n1. –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥ –≤ –∫–ª–∏–∫–µ—Ä–µ (–¥–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ –∏ –ø—Ä–æ—Å—Ç–æ —Ç—ã–∫–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É.)")

@router.message(F.text.lower() == 'üí∞ –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
async def zar_button(message: Message):
    await message.answer(f"üí∞ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞:\n–ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∏–∫–µ—Ä –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ 'üíé –ö–ª–∏–∫–µ—Ä'\n\n–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_data['money']} üí∞", reply_markup=kb.zarabotok)